.text-node {
  position: relative;
  min-width: 150px;
  min-height: 40px;
  padding: 3px 4px 3px 4px;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 2px;
  transition: box-shadow 0.3s ease, border-color 0.3s ease, background-color 0.3s ease, transform 0.2s ease, width 0.3s ease, height 0.3s ease;
  box-shadow: none;
}

.text-node.selected,
.text-node:focus-within {
  /* box-shadow: 0 0 8px 1px rgba(100,200,255,0.18);
  border: 1px solid rgba(100, 201, 255, 0.346); */
  
  box-shadow: 0 0 8px 1px rgba(100,200,255,0.02);
  /* border: 1px solid rgba(100, 201, 255, 0.192); */
  background-color: rgba(100, 200, 255, 0.05);
  transform: scale(1.001);
}

.text-node:hover:not(.selected):not(:focus-within) {
  /* box-shadow: 0 0 8px 1px rgba(100,200,255,0.10); */
  /* border: 1px solid rgba(100, 201, 255, 0.192); */
  background-color: rgba(100, 200, 255, 0.02);
  transform: scale(1.0005);
}

.text-node-content {
  width: 100%;
  min-height: 1em;
  color: #fff;
  font-size: 10px;
  line-height: 1.5;
  background: transparent;
  box-shadow: none;
  border: none;
  transition: opacity 0.2s ease;
}

.text-node-content pre {
  margin: 0;
  background: transparent;
  color: #fff;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  white-space: pre-wrap;
  word-break: break-all;
  transition: color 0.2s ease;
}

.text-node-editor {
  width: 100%;
  min-height: 1em;
  color: #fff;
  font-size: 10px;
  line-height: 1.5;
  border: none;
  outline: none;
  resize: none;
  background: transparent;
  padding: 0;
  margin: 0;
  font-family: inherit;
  font-variant-ligatures: none;
  transition: color 0.2s ease;
  opacity: 1;
}

.text-node-editor::placeholder {
  color: rgba(160, 236, 255, 0.35);
  font-family: inherit;
  font-variant-ligatures: none;
}

.text-node-divider {
  width: 100%;
  height: 1px;
  background: linear-gradient(90deg, rgba(100,200,255,0.08) 0%, rgba(100,200,255,0.18) 50%, rgba(100,200,255,0.08) 100%);
  border: none;
  margin-top: 3px;
  margin-bottom: 3px;
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: scaleX(0);
  animation: dividerAppear 0.4s ease 0.1s forwards;
}

@keyframes dividerAppear {
  from {
    opacity: 0;
    transform: scaleX(0);
  }
  to {
    opacity: 1;
    transform: scaleX(1);
  }
}

.text-node-result {
  padding: 0px;
  margin: 0px;
  font-size: 10px;
  color: rgba(188, 242, 255, 0.801);
  background: transparent;
  border-radius: 0;
  border-left: none;
  transition: color 0.2s ease, opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: translateY(5px);
  animation: resultAppear 0.4s ease 0.2s forwards;
}

@keyframes resultAppear {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 输出变量区样式 */
.text-node-outputs {
  padding: 0px;
  margin: 0px;
  font-size: 10px;
  color: rgba(160, 236, 255, 0.7);
  background: transparent;
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: translateY(5px);
  animation: outputsAppear 0.4s ease 0.2s forwards;
}

@keyframes outputsAppear {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.output-variable {
  margin: 2px 0;
  line-height: 1.5;
}

.output-label {
  color: rgba(100, 200, 255, 0.6);
  font-weight: 500;
}

.output-value {
  color: rgba(188, 242, 255, 0.9);
  font-weight: 600;
}

/* Console.log 输出区样式 */
.text-node-logs {
  padding: 0px;
  margin: 0px;
  font-size: 10px;
  color: rgba(160, 236, 255, 0.7);
  background: transparent;
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: translateY(5px);
  animation: logsAppear 0.4s ease 0.2s forwards;
}

@keyframes logsAppear {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.log-entry {
  margin: 1px 0;
  line-height: 1.4;
  color: rgba(188, 242, 255, 0.8);
}

.text-node-handle {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: none;
  border-radius: 0;
  opacity: 0;
  background: transparent;
  transform: none;
  transition: opacity 0.2s ease;
}

.hide-handle {
  pointer-events: none;
}

/* 执行状态指示器 - 顶部显示 */
.text-node-status-top {
  padding: 0px;
  margin: 0px 0px 2px 0px;
  font-size: 8px;
  color: rgba(255, 193, 7, 0.8);
  background: transparent;
  line-height: 1.2;
  transition: opacity 0.2s ease;
  opacity: 0;
  animation: statusTopAppear 0.2s ease forwards;
}

@keyframes statusTopAppear {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 错误信息样式 */
.text-node-error {
  padding: 0px;
  margin: 0px;
  font-size: 10px;
  color: rgba(255, 99, 99, 0.8);
  background: transparent;
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: translateY(5px);
  animation: errorAppear 0.4s ease 0.2s forwards;
}

@keyframes errorAppear {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.text-node-error .error-summary {
  cursor: pointer;
  transition: color 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.text-node-error .error-summary:hover {
  color: rgba(255, 99, 99, 1);
}

.text-node-error .error-details {
  font-family: 'JetBrains Mono', monospace;
  font-size: 9px;
  line-height: 1.3;
  margin-top: 4px;
  padding: 4px;
  background: rgba(255, 99, 99, 0.1);
  border: 1px solid rgba(255, 99, 99, 0.2);
  border-radius: 2px;
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 150px;
  overflow-y: auto;
}

.text-node-error .error-details::-webkit-scrollbar {
  width: 4px;
}

.text-node-error .error-details::-webkit-scrollbar-track {
  background: transparent;
}

.text-node-error .error-details::-webkit-scrollbar-thumb {
  background: rgba(255, 99, 99, 0.3);
  border-radius: 2px;
}

.text-node-error .error-details::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 99, 99, 0.5);
}